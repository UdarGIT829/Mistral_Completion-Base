name: CI

# Triggers the workflow on push or pull request events
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        # Fetches all history for all tags and branches, including submodules
        fetch-depth: 0
        submodules: 'recursive'

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11.7' # Adjust according to your project needs


    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Install gdown
      run: pip install gdown

    - name: Cache model
      id: cache-model
      uses: actions/cache@v3
      with:
        path: ./models
        key: model-${{ hashFiles('**/lockfile') }}
        restore-keys: |
          model-

    - name: Download Model from Google Drive
      if: steps.cache-model.outputs.cache-hit != 'true'
      run: |
        gdown 'https://drive.google.com/uc?id=${{ secrets.GOOGLE_DRIVE_FILE_ID_MISTRAL_MODEL }}' -O model.7z
        7z x model.7z -o./models

    - name: Check downloaded file
      if: steps.cache-model.outputs.cache-hit != 'true'
      run: |
        ls -lh model.7z
        file model.7z

    - name: Start Application Server
      run: |
        nohup python3 app.py > server.log 2>&1 &
        echo $! > APP_PID

    - name: Health Check
      run: |
        sleep 10 # Wait for the server to start
        curl --retry 5 --retry-delay 10 --retry-connrefused http://localhost:9001/health -X POST -d '{"status":"ok"}' -H "Content-Type: application/json"
    
    - name: Run Tests
      run: |
        python3 test.py
    
    - name: Cleanup
      if: always()
      run: |
        kill $(cat APP_PID)
    - name: Print Server Log
      if: always()
      run: cat server.log